paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Product
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductIterable"
        400:
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: error message
                  payload:
                    type: array
    post:
      summary: Create a new product
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addUser" # Ensure this points to the correct schema for product creation
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#/components/schemas/Product"
                example:
                  status: success
                  payload:
                    _id: 5f9b3b3b3b3b3b3b3b3b3b3b
                    title: Example Product Title
                    description: Example Product Description
                    price: 1000
                    thumbnail: example-thumbnail-url
                    code: ExampleCode123
                    stock: 50
                    status: available
                    category: ExampleCategory
        400:
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "error message"
                  payload:
                    type: array
  /api/products/{pid}:
    get:
      summary: Get a product by id
      tags:
        - Product
      parameters:
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#/components/schemas/Product"
                example:
                  status: success
                  payload:
                    _id: 5f9b3b3b3b3b3b3b3b3b3b3b
                    title: Example Product Title
                    description: Example Product Description
                    price: 1000
                    thumbnail: example-thumbnail-url
                    code: ExampleCode123
                    stock: 50
                    status: available
                    category: ExampleCategory
        400:
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "error message"
                  payload:
                    type: array
    put:
      summary: Update a product by id
      tags:
        - Product
      parameters:
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateUser" # Ensure this points to the correct schema for product creation
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#/components/schemas/Product"
                example:
                  status: success
                  payload:
                    _id: 5f9b3b3b3b3b3b3b3b3b3b3b
                    title: Example Product Title
                    description: Example Product Description
                    price: 1000
                    thumbnail: example-thumbnail-url
                    code: ExampleCode123
                    stock: 50
                    status: available
                    category: ExampleCategory
        400:
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "error message"
                  payload:
                    type: array
    delete:
      summary: Delete a product by id
      tags:
        - Product
      parameters:
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    $ref: "#/components/schemas/Product"
                example:
                  status: success
                  payload:
                    _id: 5f9b3b3b3b3b3b3b3b3b3b3b
                    title: Example Product Title
                    description: Example Product Description
                    price: 1000
                    thumbnail: example-thumbnail-url
                    code: ExampleCode123
                    stock: 50
                    status: available
                    category: ExampleCategory
        400:
          description: error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: "error message"
                  payload:
                    type: array
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Product id
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: integer
          description: Product price
        thumbnail:
          type: string
          description: Product thumbnail
        code:
          type: string
          description: Product code
        stock:
          type: integer
          description: Product stock
        status:
          type: string
          description: Product status
        category:
          type: string
          description: Product category
      example:
        _id: 5f9b3b3b3b3b3b3b3b3b3b3b
        title: Product title
        description: Product description
        price: 1000
        thumbnail: Product thumbnail
        code: Product code
        stock: 100
        status: Product status
        category: Product category
    ProductIterable:
      type: object
      properties:
        status:
          type: string
          description: status
        payload:
          type: array
          description: payload
          items:
            $ref: "#/components/schemas/Product"
        totalPages:
          type: integer
          description: totalPages count
        prevPage:
          type: integer
          description: prevPage count
        nextPage:
          type: integer
          description: nextPage count
        page:
          type: integer
          description: page count
        hasPrevPage:
          type: boolean
          description: hasPrevPage
        hasNextPage:
          type: boolean
          description: hasNextPage
        prevLink:
          type: string
          description: prevLink
        nextLink:
          type: string
          description: nextLink
      example:
        status: success
        payload:
          - _id: 5f9b3b3b3b3b3b3b3b3b3b3b
            title: Product title
            description: Product description
            price: 1000
            thumbnail: Product thumbnail
            code: Product code
            stock: 100
            status: Product status
            category: Product category
        totalPages: 1
        prevPage: 0
        nextPage: 0
        page: 1
        hasPrevPage: false
        hasNextPage: false
        prevLink: null
        nextLink: null
  requestBodies:
    addUser:
      type: object
      properties:
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: float
          description: Product price
        thumbnail:
          type: string
          description: Product thumbnail
        code:
          type: string
          description: Product code
        stock:
          type: integer
          description: Product stock
        category:
          type: string
          description: Product category
      example:
        title: Product title
        description: Product description
        price: 1000
        thumbnail: Product thumbnail
        code: Product code
        stock: 100
        category: Product category
    updateUser:
      type: object
      properties:
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: float
          description: Product price
        thumbnail:
          type: string
          description: Product thumbnail
        code:
          type: string
          description: Product code
        stock:
          type: integer
          description: Product stock
        category:
          type: string
          description: Product category
      example:
        title: Product title
        description: Product description
        price: 1000
        thumbnail: Product thumbnail
        code: Product code
        stock: 100
        category: Product category
